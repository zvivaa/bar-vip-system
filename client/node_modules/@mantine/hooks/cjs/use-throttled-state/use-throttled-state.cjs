'use client';
'use strict';

var React = require('react');

function useThrottledState(defaultValue, wait) {
  const [value, setValue] = React.useState(defaultValue);
  const timeoutRef = React.useRef(null);
  const active = React.useRef(true);
  const clearTimeout = () => window.clearTimeout(timeoutRef.current);
  const throttledSetValue = React.useCallback(
    (newValue) => {
      if (active.current) {
        setValue(newValue);
        clearTimeout();
        active.current = false;
        timeoutRef.current = window.setTimeout(() => {
          active.current = true;
        }, wait);
      }
    },
    [wait]
  );
  React.useEffect(() => clearTimeout, []);
  return [value, throttledSetValue];
}

exports.useThrottledState = useThrottledState;
//# sourceMappingURL=use-throttled-state.cjs.map
